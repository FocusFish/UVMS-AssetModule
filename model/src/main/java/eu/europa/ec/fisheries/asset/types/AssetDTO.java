//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.08 at 10:11:39 AM CET 
//


package eu.europa.ec.fisheries.asset.types;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AssetDTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssetDTO"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="assetId" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetId"/&gt;
 *         &lt;element name="active" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="source" type="{types.asset.wsdl.fisheries.ec.europa.eu}CarrierSource"/&gt;
 *         &lt;element name="eventHistory" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="countryCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="gearType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="hasIrcs" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ircs" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="externalMarking" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="cfr" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="imo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="mmsiNo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="hasLicense" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="licenseType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="homePort" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="lengthOverAll" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="lengthBetweenPerpendiculars" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="grossTonnage" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="grossTonnageUnit" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="otherGrossTonnage" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="safetyGrossTonnage" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="powerMain" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="powerAux" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/&gt;
 *         &lt;element name="producer" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetProdOrgModel" minOccurs="0"/&gt;
 *         &lt;element name="contact" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetContact" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="notes" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetNotes" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="iccat" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="uvi" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="gfcm" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssetDTO", propOrder = {
    "assetId",
    "active",
    "source",
    "eventHistory",
    "name",
    "countryCode",
    "gearType",
    "hasIrcs",
    "ircs",
    "externalMarking",
    "cfr",
    "imo",
    "mmsiNo",
    "hasLicense",
    "licenseType",
    "homePort",
    "lengthOverAll",
    "lengthBetweenPerpendiculars",
    "grossTonnage",
    "grossTonnageUnit",
    "otherGrossTonnage",
    "safetyGrossTonnage",
    "powerMain",
    "powerAux",
    "producer",
    "contact",
    "notes",
    "iccat",
    "uvi",
    "gfcm"
})
public class AssetDTO implements Equals, HashCode
{

    @XmlElement(required = true)
    protected AssetId assetId;
    protected boolean active;
    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected CarrierSource source;
    protected String eventHistory;
    protected String name;
    protected String countryCode;
    protected String gearType;
    protected String hasIrcs;
    protected String ircs;
    protected String externalMarking;
    protected String cfr;
    protected String imo;
    protected String mmsiNo;
    protected boolean hasLicense;
    protected String licenseType;
    protected String homePort;
    protected BigDecimal lengthOverAll;
    protected BigDecimal lengthBetweenPerpendiculars;
    protected BigDecimal grossTonnage;
    protected String grossTonnageUnit;
    protected BigDecimal otherGrossTonnage;
    protected BigDecimal safetyGrossTonnage;
    protected BigDecimal powerMain;
    protected BigDecimal powerAux;
    protected AssetProdOrgModel producer;
    protected List<AssetContact> contact;
    protected List<AssetNotes> notes;
    protected String iccat;
    protected String uvi;
    protected String gfcm;

    /**
     * Default no-arg constructor
     * 
     */
    public AssetDTO() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AssetDTO(final AssetId assetId, final boolean active, final CarrierSource source, final String eventHistory, final String name, final String countryCode, final String gearType, final String hasIrcs, final String ircs, final String externalMarking, final String cfr, final String imo, final String mmsiNo, final boolean hasLicense, final String licenseType, final String homePort, final BigDecimal lengthOverAll, final BigDecimal lengthBetweenPerpendiculars, final BigDecimal grossTonnage, final String grossTonnageUnit, final BigDecimal otherGrossTonnage, final BigDecimal safetyGrossTonnage, final BigDecimal powerMain, final BigDecimal powerAux, final AssetProdOrgModel producer, final List<AssetContact> contact, final List<AssetNotes> notes, final String iccat, final String uvi, final String gfcm) {
        this.assetId = assetId;
        this.active = active;
        this.source = source;
        this.eventHistory = eventHistory;
        this.name = name;
        this.countryCode = countryCode;
        this.gearType = gearType;
        this.hasIrcs = hasIrcs;
        this.ircs = ircs;
        this.externalMarking = externalMarking;
        this.cfr = cfr;
        this.imo = imo;
        this.mmsiNo = mmsiNo;
        this.hasLicense = hasLicense;
        this.licenseType = licenseType;
        this.homePort = homePort;
        this.lengthOverAll = lengthOverAll;
        this.lengthBetweenPerpendiculars = lengthBetweenPerpendiculars;
        this.grossTonnage = grossTonnage;
        this.grossTonnageUnit = grossTonnageUnit;
        this.otherGrossTonnage = otherGrossTonnage;
        this.safetyGrossTonnage = safetyGrossTonnage;
        this.powerMain = powerMain;
        this.powerAux = powerAux;
        this.producer = producer;
        this.contact = contact;
        this.notes = notes;
        this.iccat = iccat;
        this.uvi = uvi;
        this.gfcm = gfcm;
    }

    /**
     * Gets the value of the assetId property.
     * 
     * @return
     *     possible object is
     *     {@link AssetId }
     *     
     */
    public AssetId getAssetId() {
        return assetId;
    }

    /**
     * Sets the value of the assetId property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssetId }
     *     
     */
    public void setAssetId(AssetId value) {
        this.assetId = value;
    }

    /**
     * Gets the value of the active property.
     * 
     */
    public boolean isActive() {
        return active;
    }

    /**
     * Sets the value of the active property.
     * 
     */
    public void setActive(boolean value) {
        this.active = value;
    }

    /**
     * Gets the value of the source property.
     * 
     * @return
     *     possible object is
     *     {@link CarrierSource }
     *     
     */
    public CarrierSource getSource() {
        return source;
    }

    /**
     * Sets the value of the source property.
     * 
     * @param value
     *     allowed object is
     *     {@link CarrierSource }
     *     
     */
    public void setSource(CarrierSource value) {
        this.source = value;
    }

    /**
     * Gets the value of the eventHistory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEventHistory() {
        return eventHistory;
    }

    /**
     * Sets the value of the eventHistory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventHistory(String value) {
        this.eventHistory = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the countryCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * Sets the value of the countryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountryCode(String value) {
        this.countryCode = value;
    }

    /**
     * Gets the value of the gearType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGearType() {
        return gearType;
    }

    /**
     * Sets the value of the gearType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGearType(String value) {
        this.gearType = value;
    }

    /**
     * Gets the value of the hasIrcs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHasIrcs() {
        return hasIrcs;
    }

    /**
     * Sets the value of the hasIrcs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHasIrcs(String value) {
        this.hasIrcs = value;
    }

    /**
     * Gets the value of the ircs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIrcs() {
        return ircs;
    }

    /**
     * Sets the value of the ircs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIrcs(String value) {
        this.ircs = value;
    }

    /**
     * Gets the value of the externalMarking property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExternalMarking() {
        return externalMarking;
    }

    /**
     * Sets the value of the externalMarking property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExternalMarking(String value) {
        this.externalMarking = value;
    }

    /**
     * Gets the value of the cfr property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCfr() {
        return cfr;
    }

    /**
     * Sets the value of the cfr property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCfr(String value) {
        this.cfr = value;
    }

    /**
     * Gets the value of the imo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImo() {
        return imo;
    }

    /**
     * Sets the value of the imo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImo(String value) {
        this.imo = value;
    }

    /**
     * Gets the value of the mmsiNo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMmsiNo() {
        return mmsiNo;
    }

    /**
     * Sets the value of the mmsiNo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMmsiNo(String value) {
        this.mmsiNo = value;
    }

    /**
     * Gets the value of the hasLicense property.
     * 
     */
    public boolean isHasLicense() {
        return hasLicense;
    }

    /**
     * Sets the value of the hasLicense property.
     * 
     */
    public void setHasLicense(boolean value) {
        this.hasLicense = value;
    }

    /**
     * Gets the value of the licenseType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLicenseType() {
        return licenseType;
    }

    /**
     * Sets the value of the licenseType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLicenseType(String value) {
        this.licenseType = value;
    }

    /**
     * Gets the value of the homePort property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHomePort() {
        return homePort;
    }

    /**
     * Sets the value of the homePort property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHomePort(String value) {
        this.homePort = value;
    }

    /**
     * Gets the value of the lengthOverAll property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getLengthOverAll() {
        return lengthOverAll;
    }

    /**
     * Sets the value of the lengthOverAll property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLengthOverAll(BigDecimal value) {
        this.lengthOverAll = value;
    }

    /**
     * Gets the value of the lengthBetweenPerpendiculars property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getLengthBetweenPerpendiculars() {
        return lengthBetweenPerpendiculars;
    }

    /**
     * Sets the value of the lengthBetweenPerpendiculars property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLengthBetweenPerpendiculars(BigDecimal value) {
        this.lengthBetweenPerpendiculars = value;
    }

    /**
     * Gets the value of the grossTonnage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getGrossTonnage() {
        return grossTonnage;
    }

    /**
     * Sets the value of the grossTonnage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setGrossTonnage(BigDecimal value) {
        this.grossTonnage = value;
    }

    /**
     * Gets the value of the grossTonnageUnit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGrossTonnageUnit() {
        return grossTonnageUnit;
    }

    /**
     * Sets the value of the grossTonnageUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGrossTonnageUnit(String value) {
        this.grossTonnageUnit = value;
    }

    /**
     * Gets the value of the otherGrossTonnage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getOtherGrossTonnage() {
        return otherGrossTonnage;
    }

    /**
     * Sets the value of the otherGrossTonnage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setOtherGrossTonnage(BigDecimal value) {
        this.otherGrossTonnage = value;
    }

    /**
     * Gets the value of the safetyGrossTonnage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getSafetyGrossTonnage() {
        return safetyGrossTonnage;
    }

    /**
     * Sets the value of the safetyGrossTonnage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSafetyGrossTonnage(BigDecimal value) {
        this.safetyGrossTonnage = value;
    }

    /**
     * Gets the value of the powerMain property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPowerMain() {
        return powerMain;
    }

    /**
     * Sets the value of the powerMain property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPowerMain(BigDecimal value) {
        this.powerMain = value;
    }

    /**
     * Gets the value of the powerAux property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPowerAux() {
        return powerAux;
    }

    /**
     * Sets the value of the powerAux property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPowerAux(BigDecimal value) {
        this.powerAux = value;
    }

    /**
     * Gets the value of the producer property.
     * 
     * @return
     *     possible object is
     *     {@link AssetProdOrgModel }
     *     
     */
    public AssetProdOrgModel getProducer() {
        return producer;
    }

    /**
     * Sets the value of the producer property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssetProdOrgModel }
     *     
     */
    public void setProducer(AssetProdOrgModel value) {
        this.producer = value;
    }

    /**
     * Gets the value of the contact property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contact property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContact().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AssetContact }
     * 
     * 
     */
    public List<AssetContact> getContact() {
        if (contact == null) {
            contact = new ArrayList<AssetContact>();
        }
        return this.contact;
    }

    /**
     * Gets the value of the notes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the notes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNotes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AssetNotes }
     * 
     * 
     */
    public List<AssetNotes> getNotes() {
        if (notes == null) {
            notes = new ArrayList<AssetNotes>();
        }
        return this.notes;
    }

    /**
     * Gets the value of the iccat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIccat() {
        return iccat;
    }

    /**
     * Sets the value of the iccat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIccat(String value) {
        this.iccat = value;
    }

    /**
     * Gets the value of the uvi property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUvi() {
        return uvi;
    }

    /**
     * Sets the value of the uvi property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUvi(String value) {
        this.uvi = value;
    }

    /**
     * Gets the value of the gfcm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGfcm() {
        return gfcm;
    }

    /**
     * Sets the value of the gfcm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGfcm(String value) {
        this.gfcm = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AssetDTO)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AssetDTO that = ((AssetDTO) object);
        {
            AssetId lhsAssetId;
            lhsAssetId = this.getAssetId();
            AssetId rhsAssetId;
            rhsAssetId = that.getAssetId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assetId", lhsAssetId), LocatorUtils.property(thatLocator, "assetId", rhsAssetId), lhsAssetId, rhsAssetId)) {
                return false;
            }
        }
        {
            boolean lhsActive;
            lhsActive = this.isActive();
            boolean rhsActive;
            rhsActive = that.isActive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "active", lhsActive), LocatorUtils.property(thatLocator, "active", rhsActive), lhsActive, rhsActive)) {
                return false;
            }
        }
        {
            CarrierSource lhsSource;
            lhsSource = this.getSource();
            CarrierSource rhsSource;
            rhsSource = that.getSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "source", lhsSource), LocatorUtils.property(thatLocator, "source", rhsSource), lhsSource, rhsSource)) {
                return false;
            }
        }
        {
            String lhsEventHistory;
            lhsEventHistory = this.getEventHistory();
            String rhsEventHistory;
            rhsEventHistory = that.getEventHistory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventHistory", lhsEventHistory), LocatorUtils.property(thatLocator, "eventHistory", rhsEventHistory), lhsEventHistory, rhsEventHistory)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsCountryCode;
            lhsCountryCode = this.getCountryCode();
            String rhsCountryCode;
            rhsCountryCode = that.getCountryCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryCode", lhsCountryCode), LocatorUtils.property(thatLocator, "countryCode", rhsCountryCode), lhsCountryCode, rhsCountryCode)) {
                return false;
            }
        }
        {
            String lhsGearType;
            lhsGearType = this.getGearType();
            String rhsGearType;
            rhsGearType = that.getGearType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gearType", lhsGearType), LocatorUtils.property(thatLocator, "gearType", rhsGearType), lhsGearType, rhsGearType)) {
                return false;
            }
        }
        {
            String lhsHasIrcs;
            lhsHasIrcs = this.getHasIrcs();
            String rhsHasIrcs;
            rhsHasIrcs = that.getHasIrcs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hasIrcs", lhsHasIrcs), LocatorUtils.property(thatLocator, "hasIrcs", rhsHasIrcs), lhsHasIrcs, rhsHasIrcs)) {
                return false;
            }
        }
        {
            String lhsIrcs;
            lhsIrcs = this.getIrcs();
            String rhsIrcs;
            rhsIrcs = that.getIrcs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ircs", lhsIrcs), LocatorUtils.property(thatLocator, "ircs", rhsIrcs), lhsIrcs, rhsIrcs)) {
                return false;
            }
        }
        {
            String lhsExternalMarking;
            lhsExternalMarking = this.getExternalMarking();
            String rhsExternalMarking;
            rhsExternalMarking = that.getExternalMarking();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "externalMarking", lhsExternalMarking), LocatorUtils.property(thatLocator, "externalMarking", rhsExternalMarking), lhsExternalMarking, rhsExternalMarking)) {
                return false;
            }
        }
        {
            String lhsCfr;
            lhsCfr = this.getCfr();
            String rhsCfr;
            rhsCfr = that.getCfr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cfr", lhsCfr), LocatorUtils.property(thatLocator, "cfr", rhsCfr), lhsCfr, rhsCfr)) {
                return false;
            }
        }
        {
            String lhsImo;
            lhsImo = this.getImo();
            String rhsImo;
            rhsImo = that.getImo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "imo", lhsImo), LocatorUtils.property(thatLocator, "imo", rhsImo), lhsImo, rhsImo)) {
                return false;
            }
        }
        {
            String lhsMmsiNo;
            lhsMmsiNo = this.getMmsiNo();
            String rhsMmsiNo;
            rhsMmsiNo = that.getMmsiNo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mmsiNo", lhsMmsiNo), LocatorUtils.property(thatLocator, "mmsiNo", rhsMmsiNo), lhsMmsiNo, rhsMmsiNo)) {
                return false;
            }
        }
        {
            boolean lhsHasLicense;
            lhsHasLicense = this.isHasLicense();
            boolean rhsHasLicense;
            rhsHasLicense = that.isHasLicense();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hasLicense", lhsHasLicense), LocatorUtils.property(thatLocator, "hasLicense", rhsHasLicense), lhsHasLicense, rhsHasLicense)) {
                return false;
            }
        }
        {
            String lhsLicenseType;
            lhsLicenseType = this.getLicenseType();
            String rhsLicenseType;
            rhsLicenseType = that.getLicenseType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "licenseType", lhsLicenseType), LocatorUtils.property(thatLocator, "licenseType", rhsLicenseType), lhsLicenseType, rhsLicenseType)) {
                return false;
            }
        }
        {
            String lhsHomePort;
            lhsHomePort = this.getHomePort();
            String rhsHomePort;
            rhsHomePort = that.getHomePort();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "homePort", lhsHomePort), LocatorUtils.property(thatLocator, "homePort", rhsHomePort), lhsHomePort, rhsHomePort)) {
                return false;
            }
        }
        {
            BigDecimal lhsLengthOverAll;
            lhsLengthOverAll = this.getLengthOverAll();
            BigDecimal rhsLengthOverAll;
            rhsLengthOverAll = that.getLengthOverAll();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lengthOverAll", lhsLengthOverAll), LocatorUtils.property(thatLocator, "lengthOverAll", rhsLengthOverAll), lhsLengthOverAll, rhsLengthOverAll)) {
                return false;
            }
        }
        {
            BigDecimal lhsLengthBetweenPerpendiculars;
            lhsLengthBetweenPerpendiculars = this.getLengthBetweenPerpendiculars();
            BigDecimal rhsLengthBetweenPerpendiculars;
            rhsLengthBetweenPerpendiculars = that.getLengthBetweenPerpendiculars();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lengthBetweenPerpendiculars", lhsLengthBetweenPerpendiculars), LocatorUtils.property(thatLocator, "lengthBetweenPerpendiculars", rhsLengthBetweenPerpendiculars), lhsLengthBetweenPerpendiculars, rhsLengthBetweenPerpendiculars)) {
                return false;
            }
        }
        {
            BigDecimal lhsGrossTonnage;
            lhsGrossTonnage = this.getGrossTonnage();
            BigDecimal rhsGrossTonnage;
            rhsGrossTonnage = that.getGrossTonnage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "grossTonnage", lhsGrossTonnage), LocatorUtils.property(thatLocator, "grossTonnage", rhsGrossTonnage), lhsGrossTonnage, rhsGrossTonnage)) {
                return false;
            }
        }
        {
            String lhsGrossTonnageUnit;
            lhsGrossTonnageUnit = this.getGrossTonnageUnit();
            String rhsGrossTonnageUnit;
            rhsGrossTonnageUnit = that.getGrossTonnageUnit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "grossTonnageUnit", lhsGrossTonnageUnit), LocatorUtils.property(thatLocator, "grossTonnageUnit", rhsGrossTonnageUnit), lhsGrossTonnageUnit, rhsGrossTonnageUnit)) {
                return false;
            }
        }
        {
            BigDecimal lhsOtherGrossTonnage;
            lhsOtherGrossTonnage = this.getOtherGrossTonnage();
            BigDecimal rhsOtherGrossTonnage;
            rhsOtherGrossTonnage = that.getOtherGrossTonnage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherGrossTonnage", lhsOtherGrossTonnage), LocatorUtils.property(thatLocator, "otherGrossTonnage", rhsOtherGrossTonnage), lhsOtherGrossTonnage, rhsOtherGrossTonnage)) {
                return false;
            }
        }
        {
            BigDecimal lhsSafetyGrossTonnage;
            lhsSafetyGrossTonnage = this.getSafetyGrossTonnage();
            BigDecimal rhsSafetyGrossTonnage;
            rhsSafetyGrossTonnage = that.getSafetyGrossTonnage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "safetyGrossTonnage", lhsSafetyGrossTonnage), LocatorUtils.property(thatLocator, "safetyGrossTonnage", rhsSafetyGrossTonnage), lhsSafetyGrossTonnage, rhsSafetyGrossTonnage)) {
                return false;
            }
        }
        {
            BigDecimal lhsPowerMain;
            lhsPowerMain = this.getPowerMain();
            BigDecimal rhsPowerMain;
            rhsPowerMain = that.getPowerMain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "powerMain", lhsPowerMain), LocatorUtils.property(thatLocator, "powerMain", rhsPowerMain), lhsPowerMain, rhsPowerMain)) {
                return false;
            }
        }
        {
            BigDecimal lhsPowerAux;
            lhsPowerAux = this.getPowerAux();
            BigDecimal rhsPowerAux;
            rhsPowerAux = that.getPowerAux();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "powerAux", lhsPowerAux), LocatorUtils.property(thatLocator, "powerAux", rhsPowerAux), lhsPowerAux, rhsPowerAux)) {
                return false;
            }
        }
        {
            AssetProdOrgModel lhsProducer;
            lhsProducer = this.getProducer();
            AssetProdOrgModel rhsProducer;
            rhsProducer = that.getProducer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "producer", lhsProducer), LocatorUtils.property(thatLocator, "producer", rhsProducer), lhsProducer, rhsProducer)) {
                return false;
            }
        }
        {
            List<AssetContact> lhsContact;
            lhsContact = (((this.contact!= null)&&(!this.contact.isEmpty()))?this.getContact():null);
            List<AssetContact> rhsContact;
            rhsContact = (((that.contact!= null)&&(!that.contact.isEmpty()))?that.getContact():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contact", lhsContact), LocatorUtils.property(thatLocator, "contact", rhsContact), lhsContact, rhsContact)) {
                return false;
            }
        }
        {
            List<AssetNotes> lhsNotes;
            lhsNotes = (((this.notes!= null)&&(!this.notes.isEmpty()))?this.getNotes():null);
            List<AssetNotes> rhsNotes;
            rhsNotes = (((that.notes!= null)&&(!that.notes.isEmpty()))?that.getNotes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notes", lhsNotes), LocatorUtils.property(thatLocator, "notes", rhsNotes), lhsNotes, rhsNotes)) {
                return false;
            }
        }
        {
            String lhsIccat;
            lhsIccat = this.getIccat();
            String rhsIccat;
            rhsIccat = that.getIccat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iccat", lhsIccat), LocatorUtils.property(thatLocator, "iccat", rhsIccat), lhsIccat, rhsIccat)) {
                return false;
            }
        }
        {
            String lhsUvi;
            lhsUvi = this.getUvi();
            String rhsUvi;
            rhsUvi = that.getUvi();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uvi", lhsUvi), LocatorUtils.property(thatLocator, "uvi", rhsUvi), lhsUvi, rhsUvi)) {
                return false;
            }
        }
        {
            String lhsGfcm;
            lhsGfcm = this.getGfcm();
            String rhsGfcm;
            rhsGfcm = that.getGfcm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gfcm", lhsGfcm), LocatorUtils.property(thatLocator, "gfcm", rhsGfcm), lhsGfcm, rhsGfcm)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            AssetId theAssetId;
            theAssetId = this.getAssetId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assetId", theAssetId), currentHashCode, theAssetId);
        }
        {
            boolean theActive;
            theActive = this.isActive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "active", theActive), currentHashCode, theActive);
        }
        {
            CarrierSource theSource;
            theSource = this.getSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "source", theSource), currentHashCode, theSource);
        }
        {
            String theEventHistory;
            theEventHistory = this.getEventHistory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventHistory", theEventHistory), currentHashCode, theEventHistory);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            String theCountryCode;
            theCountryCode = this.getCountryCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryCode", theCountryCode), currentHashCode, theCountryCode);
        }
        {
            String theGearType;
            theGearType = this.getGearType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gearType", theGearType), currentHashCode, theGearType);
        }
        {
            String theHasIrcs;
            theHasIrcs = this.getHasIrcs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hasIrcs", theHasIrcs), currentHashCode, theHasIrcs);
        }
        {
            String theIrcs;
            theIrcs = this.getIrcs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ircs", theIrcs), currentHashCode, theIrcs);
        }
        {
            String theExternalMarking;
            theExternalMarking = this.getExternalMarking();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "externalMarking", theExternalMarking), currentHashCode, theExternalMarking);
        }
        {
            String theCfr;
            theCfr = this.getCfr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cfr", theCfr), currentHashCode, theCfr);
        }
        {
            String theImo;
            theImo = this.getImo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "imo", theImo), currentHashCode, theImo);
        }
        {
            String theMmsiNo;
            theMmsiNo = this.getMmsiNo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mmsiNo", theMmsiNo), currentHashCode, theMmsiNo);
        }
        {
            boolean theHasLicense;
            theHasLicense = this.isHasLicense();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hasLicense", theHasLicense), currentHashCode, theHasLicense);
        }
        {
            String theLicenseType;
            theLicenseType = this.getLicenseType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "licenseType", theLicenseType), currentHashCode, theLicenseType);
        }
        {
            String theHomePort;
            theHomePort = this.getHomePort();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "homePort", theHomePort), currentHashCode, theHomePort);
        }
        {
            BigDecimal theLengthOverAll;
            theLengthOverAll = this.getLengthOverAll();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lengthOverAll", theLengthOverAll), currentHashCode, theLengthOverAll);
        }
        {
            BigDecimal theLengthBetweenPerpendiculars;
            theLengthBetweenPerpendiculars = this.getLengthBetweenPerpendiculars();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lengthBetweenPerpendiculars", theLengthBetweenPerpendiculars), currentHashCode, theLengthBetweenPerpendiculars);
        }
        {
            BigDecimal theGrossTonnage;
            theGrossTonnage = this.getGrossTonnage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "grossTonnage", theGrossTonnage), currentHashCode, theGrossTonnage);
        }
        {
            String theGrossTonnageUnit;
            theGrossTonnageUnit = this.getGrossTonnageUnit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "grossTonnageUnit", theGrossTonnageUnit), currentHashCode, theGrossTonnageUnit);
        }
        {
            BigDecimal theOtherGrossTonnage;
            theOtherGrossTonnage = this.getOtherGrossTonnage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherGrossTonnage", theOtherGrossTonnage), currentHashCode, theOtherGrossTonnage);
        }
        {
            BigDecimal theSafetyGrossTonnage;
            theSafetyGrossTonnage = this.getSafetyGrossTonnage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "safetyGrossTonnage", theSafetyGrossTonnage), currentHashCode, theSafetyGrossTonnage);
        }
        {
            BigDecimal thePowerMain;
            thePowerMain = this.getPowerMain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "powerMain", thePowerMain), currentHashCode, thePowerMain);
        }
        {
            BigDecimal thePowerAux;
            thePowerAux = this.getPowerAux();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "powerAux", thePowerAux), currentHashCode, thePowerAux);
        }
        {
            AssetProdOrgModel theProducer;
            theProducer = this.getProducer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "producer", theProducer), currentHashCode, theProducer);
        }
        {
            List<AssetContact> theContact;
            theContact = (((this.contact!= null)&&(!this.contact.isEmpty()))?this.getContact():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contact", theContact), currentHashCode, theContact);
        }
        {
            List<AssetNotes> theNotes;
            theNotes = (((this.notes!= null)&&(!this.notes.isEmpty()))?this.getNotes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notes", theNotes), currentHashCode, theNotes);
        }
        {
            String theIccat;
            theIccat = this.getIccat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iccat", theIccat), currentHashCode, theIccat);
        }
        {
            String theUvi;
            theUvi = this.getUvi();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uvi", theUvi), currentHashCode, theUvi);
        }
        {
            String theGfcm;
            theGfcm = this.getGfcm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gfcm", theGfcm), currentHashCode, theGfcm);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
