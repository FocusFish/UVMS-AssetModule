//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.08 at 10:11:39 AM CET 
//


package eu.europa.ec.fisheries.asset.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AssetListQuery complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssetListQuery"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="pagination" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetListPagination"/&gt;
 *         &lt;element name="assetSearchCriteria" type="{types.asset.wsdl.fisheries.ec.europa.eu}AssetListCriteria"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssetListQuery", propOrder = {
    "pagination",
    "assetSearchCriteria"
})
public class AssetListQuery implements Equals, HashCode
{

    @XmlElement(required = true)
    protected AssetListPagination pagination;
    @XmlElement(required = true)
    protected AssetListCriteria assetSearchCriteria;

    /**
     * Default no-arg constructor
     * 
     */
    public AssetListQuery() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AssetListQuery(final AssetListPagination pagination, final AssetListCriteria assetSearchCriteria) {
        this.pagination = pagination;
        this.assetSearchCriteria = assetSearchCriteria;
    }

    /**
     * Gets the value of the pagination property.
     * 
     * @return
     *     possible object is
     *     {@link AssetListPagination }
     *     
     */
    public AssetListPagination getPagination() {
        return pagination;
    }

    /**
     * Sets the value of the pagination property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssetListPagination }
     *     
     */
    public void setPagination(AssetListPagination value) {
        this.pagination = value;
    }

    /**
     * Gets the value of the assetSearchCriteria property.
     * 
     * @return
     *     possible object is
     *     {@link AssetListCriteria }
     *     
     */
    public AssetListCriteria getAssetSearchCriteria() {
        return assetSearchCriteria;
    }

    /**
     * Sets the value of the assetSearchCriteria property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssetListCriteria }
     *     
     */
    public void setAssetSearchCriteria(AssetListCriteria value) {
        this.assetSearchCriteria = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AssetListQuery)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AssetListQuery that = ((AssetListQuery) object);
        {
            AssetListPagination lhsPagination;
            lhsPagination = this.getPagination();
            AssetListPagination rhsPagination;
            rhsPagination = that.getPagination();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pagination", lhsPagination), LocatorUtils.property(thatLocator, "pagination", rhsPagination), lhsPagination, rhsPagination)) {
                return false;
            }
        }
        {
            AssetListCriteria lhsAssetSearchCriteria;
            lhsAssetSearchCriteria = this.getAssetSearchCriteria();
            AssetListCriteria rhsAssetSearchCriteria;
            rhsAssetSearchCriteria = that.getAssetSearchCriteria();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assetSearchCriteria", lhsAssetSearchCriteria), LocatorUtils.property(thatLocator, "assetSearchCriteria", rhsAssetSearchCriteria), lhsAssetSearchCriteria, rhsAssetSearchCriteria)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            AssetListPagination thePagination;
            thePagination = this.getPagination();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pagination", thePagination), currentHashCode, thePagination);
        }
        {
            AssetListCriteria theAssetSearchCriteria;
            theAssetSearchCriteria = this.getAssetSearchCriteria();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assetSearchCriteria", theAssetSearchCriteria), currentHashCode, theAssetSearchCriteria);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
